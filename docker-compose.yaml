version: '3.8'

networks:
  mlops_network:
    driver: bridge

services:
  airflow-webserver:
    build: ./airflow
    image: custom-airflow:latest
    container_name: airflow-webserver
    env_file: .env
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@10.43.101.187:30432/airflow
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW_CONN_POSTGRES_DEFAULT=postgresql+psycopg2://airflow:airflow@10.43.101.187:30432/airflow
      - AIRFLOW_CONN_MLFLOW_DEFAULT=http://10.43.101.187:30500
      - MLFLOW_TRACKING_URI=http://10.43.101.187:30500
      - MLFLOW_S3_BUCKET=mlflow-artifacts
      - MLFLOW_S3_ENDPOINT_URL=http://10.43.101.187:30900
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./datasets:/opt/airflow/datasets
      - ./airflow/models:/opt/airflow/models

    ports:
      - "8080:8080"
    networks:
      - mlops_network
    command: ["airflow", "webserver"]
    restart: always

  airflow-scheduler:
    build: ./airflow
    image: custom-airflow:latest
    container_name: airflow-scheduler
    env_file: .env
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@10.43.101.187:30432/airflow
      - AIRFLOW_CONN_POSTGRES_DEFAULT=postgresql+psycopg2://airflow:airflow@10.43.101.187:30432/airflow
      - AIRFLOW_CONN_MLFLOW_DEFAULT=http://10.43.101.187:30500
      - MLFLOW_TRACKING_URI=http://10.43.101.187:30500
      - MLFLOW_S3_BUCKET=mlflow-artifacts
      - MLFLOW_S3_ENDPOINT_URL=http://10.43.101.187:30900
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./datasets:/opt/airflow/datasets
      - ./airflow/models:/opt/airflow/models
    networks:
      - mlops_network
    command: ["airflow", "scheduler"]
    restart: always

  jupyterlab:
    image: jupyter/base-notebook:latest
    container_name: jupyterlab
    env_file: .env
    volumes:
      - ./notebooks:/home/jovyan/work
    ports:
      - "8888:8888"
    depends_on:
      - airflow-webserver
      - airflow-scheduler
    networks:
      - mlops_network
    restart: always

